gap> Q := Quiver( 1, [ [1,1,"a"], [1,1,"b"] ] );
<quiver with 1 vertices and 2 arrows>
gap> Display(Q);
Quiver( ["v1"], [["v1","v1","a"],["v1","v1","b"]] )
gap> Q := Quiver(2,[ [1,1,"a"],[2,2,"b"],[2,1,"g"],[1,2,"s"]]);
<quiver with 2 vertices and 4 arrows>
gap> kQ := PathAlgebra(Rationals,Q);
<Rationals[<quiver with 2 vertices and 4 arrows>]>
gap> relations := [kQ.a*kQg];
Error, Variable: 'kQg' must have a value
not in any function at line 9 of *stdin*
gap> relations := [kQ.a*kQ.g];
[ <zero> of ... ]
gap> relations := [kQ.a*kQ.s];
[ (1)*a*s ]
gap> A := kQ/relations;
<Rationals[<quiver with 2 vertices and 4 arrows>]/
<two-sided ideal in <Rationals[<quiver with 2 vertices and 4 arrows>]>, 
  (1 generators)>>
gap> relations := [kQ.a*kQ.a-kQ.s*kQ.g , 2*kQ.b*kQ.b-kQ.g*kQ.s , kQ.g*kQ.a-kQ.b*kQ.g , kQ.s*kQ.b-kQ.a*kQ.s];
[ (1)*a^2+(-1)*s*g, (2)*b^2+(-1)*g*s, (-1)*b*g+(1)*g*a, (-1)*a*s+(1)*s*b ]
gap> A := kQ/relations;
<Rationals[<quiver with 2 vertices and 4 arrows>]/
<two-sided ideal in <Rationals[<quiver with 2 vertices and 4 arrows>]>, 
  (8 generators)>>
gap> IsAdmissibleQuotientOfPathAlgebra(A)
> ;                                    
true
gap> relations2 := [NthPowerOfArrowIdeal(Q,3)];
Error, no method found! For debugging hints type ?Recovery from NoMethodFound
Error, no 1st choice method found for `NthPowerOfArrowIdeal' on 2 arguments called from
<function "HANDLE_METHOD_NOT_FOUND">( <arguments> )
 called from read-eval loop at line 17 of *stdin*
you can 'quit;' to quit to outer loop, or
you can 'return;' to continue
brk> quit
> ;
gap> relations2 := NthPowerOfArrowIdeal(Q,3);
Error, no method found! For debugging hints type ?Recovery from NoMethodFound
Error, no 1st choice method found for `NthPowerOfArrowIdeal' on 2 arguments called from
<function "HANDLE_METHOD_NOT_FOUND">( <arguments> )
 called from read-eval loop at line 17 of *stdin*
you can 'quit;' to quit to outer loop, or
you can 'return;' to continue
brk> quit;             
gap> relations2 := NthPowerOfArrowIdeal(kQ,3);
[ (1)*a^3, (1)*a^2*s, (1)*a*s*b, (1)*a*s*g, (1)*b^3, (1)*b^2*g, (1)*b*g*a, 
  (1)*b*g*s, (1)*g*a^2, (1)*g*a*s, (1)*g*s*b, (1)*g*s*g, (1)*s*b^2, 
  (1)*s*b*g, (1)*s*g*a, (1)*s*g*s ]
gap> Append(relations2,[kQ.a*kQ.s,kQ.b*kQ.g]);
gap> realtions2;
Error, Variable: 'realtions2' must have a value
not in any function at line 19 of *stdin*
gap> relations2;
[ (1)*a^3, (1)*a^2*s, (1)*a*s*b, (1)*a*s*g, (1)*b^3, (1)*b^2*g, (1)*b*g*a, 
  (1)*b*g*s, (1)*g*a^2, (1)*g*a*s, (1)*g*s*b, (1)*g*s*g, (1)*s*b^2, 
  (1)*s*b*g, (1)*s*g*a, (1)*s*g*s, (1)*a*s, (1)*b*g ]
gap> A2 := kQ/relations2;  
<Rationals[<quiver with 2 vertices and 4 arrows>]/
<two-sided ideal in <Rationals[<quiver with 2 vertices and 4 arrows>]>, 
  (10 generators)>>
gap> IsAdmissibleQuotientOfPathAlgebra(A2);
true
gap> Dimension(A);
12
gap> Dimension(A2);
14


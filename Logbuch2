gap> Q:=Quiver(5,[[5,4,"d"],[4,3,"c"],[3,2,"b"],[2,1,"a"]]);
<quiver with 5 vertices and 4 arrows>
gap> I:=NthPowerOfArrowIdeal(kQ,2);
[ (1)*a^2, (1)*a*s, (1)*b^2, (1)*b*g, (1)*g*a, (1)*g*s, (1)*s*b, (1)*s*g ]
gap>  kQ := PathAlgebra(Rationals,Q);
<Rationals[<quiver with 5 vertices and 4 arrows>]>
gap> I:=NthPowerOfArrowIdeal(kQ,2);
[ (1)*d*c, (1)*c*b, (1)*b*a ]
gap> A:=kQ/I;
<Rationals[<quiver with 5 vertices and 4 arrows>]/
<two-sided ideal in <Rationals[<quiver with 5 vertices and 4 arrows>]>, 
  (3 generators)>>
  
  
  
  
  
gap> projectives := IndecProjectiveModules(A);
%das sind die unzerlegbaren projektiven Moduln
[ <[ 1, 0, 0, 0, 0 ]>, <[ 1, 1, 0, 0, 0 ]>, <[ 0, 1, 1, 0, 0 ]>, 
  <[ 0, 0, 1, 1, 0 ]>, <[ 0, 0, 0, 1, 1 ]> ]
%e_1A,e_2A,...
gap> proj1 := projectives[1];
<[ 1, 0, 0, 0, 0 ]>
gap> Display(proj1);
<Module over <Rationals[<quiver with 5 vertices and 4 arrows>]/
<two-sided ideal in <Rationals[<quiver with 5 vertices and 4 arrows>]>, 
  (3 generators)>> with dimension vector [ 1, 0, 0, 0, 0 
 ]> and linear maps given by
for arrow d:
[ [  0 ] ]
for arrow c:
[ [  0 ] ]
for arrow b:
[ [  0 ] ]
for arrow a:
[ [  0 ] ]
%M=e_1A
gap> proj3:=projectives[3];
<[ 0, 1, 1, 0, 0 ]>
gap> Display(proj3);
<Module over <Rationals[<quiver with 5 vertices and 4 arrows>]/
<two-sided ideal in <Rationals[<quiver with 5 vertices and 4 arrows>]>, 
  (3 generators)>> with dimension vector [ 0, 1, 1, 0, 0 
 ]> and linear maps given by
for arrow d:
[ [  0 ] ]
for arrow c:
[ [  0 ] ]
for arrow b:
[ [  1 ] ]
for arrow a:
[ [  0 ] ]
%M=e_2A
gap> RadicalOfModule(proj1);
<[ 0, 0, 0, 0, 0 ]>
%Radikale von e_1A
gap> RadicalOfModule(proj3);
<[ 0, 1, 0, 0, 0 ]>
%Radikale von e_3A





%injektive und einfache Moduln

gap> injectives:=IndecInjectiveModules(A);
[ <[ 1, 1, 0, 0, 0 ]>, <[ 0, 1, 1, 0, 0 ]>, <[ 0, 0, 1, 1, 0 ]>, 
  <[ 0, 0, 0, 1, 1 ]>, <[ 0, 0, 0, 0, 1 ]> ]
gap> simples:=SimpleModules(A);
[ <[ 1, 0, 0, 0, 0 ]>, <[ 0, 1, 0, 0, 0 ]>, <[ 0, 0, 1, 0, 0 ]>, 
  <[ 0, 0, 0, 1, 0 ]>, <[ 0, 0, 0, 0, 1 ]> ]

%Sockel von injektiven Modul inj1

gap> inj1:=injectives[1];
<[ 1, 1, 0, 0, 0 ]>
gap> SocleOfModule(inj1);
<[ 1, 0, 0, 0, 0 ]>



------------------------------------------------------------------

gap> Q:=Quiver(6,[[2,1,"b"],[3,2,"a"],[1,4,"t"],[2,5,"m"],[3,6,"n"],[5,4,"d"],[6,5,"g"]]);
<quiver with 6 vertices and 7 arrows>
gap> kQ := PathAlgebra(Rationals,Q);
<Rationals[<quiver with 6 vertices and 7 arrows>]>
gap> gens:=GeneratorsOfAlgebra(kQ);
[ (1)*v1, (1)*v2, (1)*v3, (1)*v4, (1)*v5, (1)*v6, (1)*b, (1)*a, (1)*t, (1)*m, (1)*n, (1)*d, (1)*g ]
gap> a:=gens[8];
(1)*a
gap> b:=gens[7];
(1)*b
gap> m:=gens[10];
(1)*m
gap> n:=gens[11];
(1)*n
gap> d:=gens[12];
(1)*d
gap> g:=gens[13];
(1)*g
gap> t:=gens[9];
(1)*t
gap> relations:=[a*m-n*g,b*t-m*d,a*b,g*d];
[ (1)*a*m+(-1)*n*g, (1)*b*t+(-1)*m*d, (1)*a*b, (1)*g*d ]


